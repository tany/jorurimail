<%= javascript_include_tag "/_common/js/mail_form.js" %>
<script type="text/javascript">
//<![CDATA[

var chkval = {}
function checkAll(type, gid) {
  var value = chkval[type + gid];
  chkval[type + gid] = value = value ? 0 : 1;
  var frm = document.users;
  var len = frm.elements.length;
  for ( var i = 0; i < len; i++) {
    if(frm.elements[i].name.match(new RegExp('^' + type + '\\['))) {
      if (frm.elements[i].className == "group" + gid) {
        frm.elements[i].checked = value;
      }
    }
  }
  return false;
}

function createMail() {
  var frm = document.users;
  var len = frm.elements.length;
  var chk = {to : 0, cc : 0, bcc : 0};
  for ( var i = 0; i < len; i++) {
    if (frm.elements[i].checked != true) continue;
    if (frm.elements[i].name.match(/^to\[/)) {
      chk['to'] += 1;
    } else if (frm.elements[i].name.match(/^cc\[/)) {
      chk['cc'] += 1;
    } else if (frm.elements[i].name.match(/^bcc\[/)) {
      chk['bcc'] += 1;
    }
  }
  if (chk['to'] + chk['cc'] + chk['bcc'] == 0) {
    alert("ユーザを選択してください。");
    return false;
  } else if (chk['to'] > 150) {
    alert("宛先に選択できるのは150件までです。");
    return false;
  } else if (chk['cc'] > 150) {
    alert("Toに選択できるのは150件までです。");
    return false;
  } else if (chk['bcc'] > 150) {
    alert("Bccに選択できるのは150件までです。");
    return false;
  }
  var w = openMailForm("", '<%=raw mail_form_style %>', "mailForm" + new Date().getTime());
  frm.target = w.name;
  frm.submit();
  return false;
}

function getNodeValue(node, name) {
  var elem = node.getElementsByTagName(name);
  if (elem.length > 0 && elem[0].firstChild != null) { return elem[0].firstChild.nodeValue; }
  return null;
}

var loading_id = null;
var showing_id = null;
var loading_group_ids = [];

function loadAddresses(gid) {
  returnToAddresses();
  var uri, param = '';
  if (arguments.length > 1) {
    uri = '<%= gw_webmail_sys_addresses_path %>' + '.xml';
    param = arguments[1];
  }else {
    uri = "<%= gw_webmail_sys_addresses_path %>/" + gid + "/child_users.xml";
    param = "group_id=" + gid;
  }
  if (loading_id != null) { return false; }
  if ($("addresses" + showing_id)) { $("addresses" + showing_id).hide(); }
  if (showing_id != null && $('group' + showing_id)) { $('group' + showing_id).className = ""; }
  showing_id = gid;
  if ($('group' + gid)) $('group' + gid).addClassName('current');
  if ($('addresses' + gid)) {
    $('addresses' + gid).show();
    if ($('toggleGroups' + gid)) toggleGroups(gid, false);
    return false;
  }
  loading_id = gid;
  var myAjax = new Ajax.Request(uri, {
    method: 'get',
    parameters: param,
    onSuccess: function(request){
      if (gid.match(/Search([0-9]+)/)) {
        var gname = '検索結果（' + RegExp.$1 + '）';
        addSearchResult(gid, gname, param);
        showAddresses(request, gid, gname);
      } else {
        showAddresses(request);
        if ($('toggleGroups' + gid)) toggleGroups(gid, false);
      }
    },
    onFailure: function(request) {
      loading_id = null;
      alert('送信に失敗しました。');
    }
  });
  return true;
}
function showAddresses(request) {
  var group, gid, gname;
  if (arguments.length > 1) {
    gid   = arguments[1];
    gname = arguments[2];
  } else {
    group = request.responseXML.getElementsByTagName("group")[0];
    gid   = getNodeValue(group, 'id');
    gname = getNodeValue(group, 'name');
  }
  var html = '';
  html += '<p class="form">' + gname.escapeHTML() + '</p>';
  html += '<div class="actionMenu"><span class="addAddressRemarks">個人アドレス帳に登録する</span>';
  html += '<a href="#" onclick="return createMail();" class="create" title="メール作成">メール作成</a>';
  if (gid.indexOf('Search') == 0 ) {
    html += ' <a href="#" onclick="removeSearchResult(\'' + gid + '\');return false;" class="delete" title="検索結果削除">検索結果削除</a>';
  }
  html += '</div><table class="index"><tr>';
  html += '<th class="checkUI"><a onmousedown="checkAll(\'to\' , \'' + gid + '\');" onclick="return false;" href="#" title="TO">TO</a></th>';
  html += '<th class="checkUI"><a onmousedown="checkAll(\'cc\' , \'' + gid + '\');" onclick="return false;" href="#" title="CC">CC</a></th>';
  html += '<th class="checkUI"><a onmousedown="checkAll(\'bcc\', \'' + gid + '\');" onclick="return false;" href="#" title="BCC">BCC</a></th>';
  html += '<th style="width: 18%;"><a class="sorter" id="nameCaption' + gid + '" href="#" onclick="sortAddresses(\'' + gid + '\', \'name\'); return false;">名前</a></th>';
  html += '<th style="width: 18%;"><a class="sorter" id="kanaCaption' + gid + '" href="#" onclick="sortAddresses(\'' + gid + '\', \'kana\'); return false;">フリガナ</a></th>';
  html += '<th style="display: none;"><a class="sorter" id="sortNoCaption' + gid + '" href="#" onclick="sortAddresses(\'' + gid + '\', \'sortNo\'); return false;">役職(担当順)</a></th>';
  html += '<th style="width: 15%;"><a class="sorter" id="officialPositionCaption' + gid + '" href="#" onclick="sortAddresses(\'' + gid + '\', \'sortNo\'); return false;">役職(担当順)</a></th>';
  html += '<th style="width: ;"><a class="sorter" id="emailCaption' + gid + '" href="#" onclick="sortAddresses(\'' + gid + '\', \'email\'); return false;">メールアドレス</a></th>';
  html += '</tr>';

  var all_escape = function (str) {
    if (str == null) return '';
    return str.replace(/[\\'"]/g, "\\$&").escapeHTML().replace(/"/g, '&quot;');
  };

  var items = request.responseXML.getElementsByTagName("item");
  for (var i = 0; i < items.length; i++) {
    var item  = items[i];
    var id    = getNodeValue(item, 'id');
    var name  = getNodeValue(item, 'name');
    var email = getNodeValue(item, 'email');
    var kana  = getNodeValue(item, 'kana');
    var sortNo = getNodeValue(item, 'sort_no');
    var officialPosition = getNodeValue(item, 'official_position');
    var groupName = getNodeValue(item, 'group_name');
    var nameView = name;
    if (groupName != null) nameView += " （" + groupName + "）";
    if (kana == null) kana = "";
    if (sortNo == null) sortNo = "";
    if (officialPosition == null) officialPosition = "";
    html += '<tr>';
    html += '<td class="checkUI"><input type="checkbox" name="to[' + id + ']"  value="1" class="group' + gid + '" /></td>';
    html += '<td class="checkUI"><input type="checkbox" name="cc[' + id + ']"  value="1" class="group' + gid + '" /></td>';
    html += '<td class="checkUI"><input type="checkbox" name="bcc[' + id + ']" value="1" class="group' + gid + '" /></td>';
    html += '<td><a id="nameValue" href="#" onclick="showAddress(\'' + id + '\');return true;">' + nameView.escapeHTML() + '</a></td>';
    html += '<td id="kanaValue">' + kana.escapeHTML() + '</td>';
    html += '<td id="sortNoValue" style="display: none;">' + sortNo.escapeHTML() + '</td>';
    html += '<td id="officialPositionValue">' + officialPosition.escapeHTML() + '</td>';
    html += "<td id=\"emailValue\">" + email.escapeHTML();
    html += "<a class=\"addAddress\" title=\"個人アドレス帳に登録する\" href=\"#top\" "
    html += "onclick=\"addAddress('" + all_escape(email) + "', '"  + all_escape(name) + "', '" + all_escape(kana) + "');return false;\">"
    html += "[個人アドレス帳に登録する]</a>";
    html += "</td>";
    html += "</tr>";
  }
  html += '</table>';
  html += '<div class="actionMenu"><a href="#" onclick="return createMail();" class="create" title="メール作成">メール作成</a>';
  if (gid.indexOf('Search') == 0 ) {
    html += ' <a href="#" onclick="removeSearchResult(\'' + gid + '\');return false;" class="delete" title="検索結果削除">検索結果削除</a>';
    var itemsElm = request.responseXML.getElementsByTagName("items")[0];
    var count = getNodeValue(itemsElm, "count");
    var total = getNodeValue(itemsElm, "total");
    if (total > count) {
      html += '<div class="limitedMessage">' + total + ' 件中 ' + count + ' 件を表示しました。</div>';
    }
  }
  html += '</div>'

  var elm = document.createElement("div");
  elm.id = 'addresses' + gid;
  elm.innerHTML = html;
  $('addresses').appendChild(elm);
  loading_id = null;
}
function showAddress(id) {
  var uri = "<%= gw_webmail_sys_addresses_path %>/" + id;
  var myAjax = new Ajax.Request(uri, {
    method: 'get',
    onSuccess: function(request) {
      var addressElm = $('sysAddress');
      addressElm.innerHTML = request.responseText;
      addressElm.show();
      $('sysAddresses').hide();
    },
    onFailure: function(request) {
      alert("送信に失敗しました。");
    }
  });
}
function returnToAddresses() {
  var addressElm = $('sysAddress');
  var addressesElm = $('sysAddresses');
  if (addressElm.visible()) addressElm.hide();
  if (!addressesElm.visible()) addressesElm.show();
}
function addAddress(email, name, kana) {
  var uri = "<%= gw_webmail_addresses_path(:format => 'xml') %>";
  var myAjax = new Ajax.Request(uri, {
    method: 'post',
    parameters: {
      authenticity_token: "<%= form_authenticity_token %>",
      "item[easy_entry]" : true,
      "item[email]" : email,
      "item[name]"  : name,
      "item[kana]"  : kana
    },
    onSuccess: function(request) {
      alert("アドレス帳に登録しました。");
    },
    onFailure: function(request) {
      var message = "送信に失敗しました。";
      var errors = request.responseXML.getElementsByTagName('error');
      if (errors.length > 0) {
        message = errors[0].firstChild.nodeValue;
      }
      alert(message);
    }
  });
}
function toggleGroups(group_id) {
  if (loading_group_ids.indexOf(group_id) > -1) return;
  var elmChildren = $('childGroups' + group_id);
  var hideChildren = true;
  if (arguments.length > 1) hideChildren = arguments[1];
  if (elmChildren) {
    var toggleElm = $('toggleGroups' + group_id);
    if (toggleElm.firstChild.nodeValue == '+') {
      elmChildren.show();
      toggleElm.firstChild.nodeValue = '-';
      toggleElm.className = "toggleGroups toggleGroupsOpen";
    } else if (hideChildren) {
      elmChildren.hide();
      toggleElm.firstChild.nodeValue = '+';
      toggleElm.className = "toggleGroups toggleGroupsClose";
    }
    return;
  }
  loading_group_ids.push(group_id);
  var uri = "<%= gw_webmail_sys_addresses_path %>/" + group_id + "/child_groups.xml";
  var myAjax = new Ajax.Request(uri, {
    method: 'get',
    onSuccess: function(request){
      showGroups(request, group_id)
    },
    onFailure: function(request) {
      var idx = loading_group_ids.indexOf(group_id);
      if (idx > -1) loading_group_ids.splice(idx, 1);
      alert('送信に失敗しました。');
    }
  });
}
function showGroups(request, parent_id) {
  var groups = request.responseXML.getElementsByTagName("group");
  var parentElm = $('group' + parent_id).parentNode;
  var ul = document.createElement('ul');
  ul.className = 'children';
  ul.id = 'childGroups' + parent_id;
  for (var i = 0; i < groups.length; i++) {
    var group  = groups[i];
    var id    = getNodeValue(group, 'id');
    var name  = getNodeValue(group, 'name');
    var hasChildren = getNodeValue(group, 'has_children');
    ul.appendChild(makeGroupElement(id, name, hasChildren == '1', false));
  }
  parentElm.appendChild(ul);

  var toggleElm = $('toggleGroups' + parent_id);
  toggleElm.firstChild.nodeValue = '-';
  toggleElm.className = "toggleGroups toggleGroupsOpen";

  var idx = loading_group_ids.indexOf(parent_id);
  if (idx > -1) {
    loading_group_ids.splice(idx, 1);
  }
}
function makeGroupElement(id, name, hasChildren, current) {
  var li = document.createElement('li');
  li.className = 'folder';
  var html = '';
  if (hasChildren) {
    html += '<a href="#" id="toggleGroups' + id + '" class="toggleGroups toggleGroupsClose" onclick="toggleGroups(\'' + id + '\');return false;">+</a> ';
  } else {
    html += '<a href="#" class="toggleGroups" style="visibility:hidden;">+</a> ';
  }
  var classCurrent = current ? 'class="current"' : '';
  html += '<a href="#top" id="group' + id + '" ' + classCurrent + ' onclick="return loadAddresses(\'' + id + '\');">' + name.escapeHTML() + '</a>'
  li.innerHTML = html;
  return li;
}
function searchAddresses() {
  var s_name = $('s_name_or_kana').value;
  var s_email = $('s_email').value;
  if (s_name == '' && s_email == '') return false;
  var param = {'search':'on', 's_name_or_kana':s_name, 's_email':s_email};
  var id = 'Search1';
  var searchChildren = $('childGroupsSearch');
  var results = null;
  if (searchChildren) {
    results = searchChildren.getElementsByTagName('li');
  }
  if (results && results.length > 0) {
    var num = results[results.length - 1].id.replace(/resultSearch([0-9]+)/, "$1");
    num = parseInt(num, 10) + 1;
    id = 'Search' + num;
  }
  return loadAddresses(id, param);
}
function addSearchResult(id, name, param) {
  var resultElm = $('resultSearch');
  if (!resultElm) {
    resultElm = makeGroupElement('Search', '検索結果一覧', true, false);
    resultElm.id = 'resultSearch';
    resultElm.innerHTML += '<ul class="children" id="childGroupsSearch"></ul>';
    var rootElm = $('folderRoot');
    rootElm.insertBefore(resultElm, rootElm.firstChild);
  }
  var li = makeGroupElement(id, name, false, true);
  li.id = 'result' + id;
  $('childGroupsSearch').appendChild(li);
  $('searchResultList').appendChild(makeConditionElement(id, name, param));
  if ($('toggleGroupsSearch').firstChild.nodeValue == '+') toggleGroups('Search');
}
function makeConditionElement(id, name, param) {
  var tr = document.createElement('tr');
  tr.id = 'condition' + id;
  var td = document.createElement('td');
  td.innerHTML = '<a href="#top" onclick="return loadAddresses(\'' + id + '\')">' + name + '</a>';
  tr.appendChild(td);
  td = document.createElement('td');
  var html = '';
  if (param['s_name_or_kana'] != '') html += '<div><span class="condition">名前</span> ： ' + param['s_name_or_kana'].escapeHTML() + '</div>';
  if (param['s_email'] != '') html += '<div><span class="condition">メールアドレス</span> ： ' + param['s_email'].escapeHTML() + '</div>';
  td.innerHTML = html;
  tr.appendChild(td);
  return tr;
}
function removeSearchResult(id) {
  var targetAddr = $('addresses' + id);
  var targetResult = $('result' + id);
  var targetCondition = $('condition' + id);
  var parent = targetResult.parentNode;
  targetAddr.parentNode.removeChild(targetAddr);
  targetCondition.parentNode.removeChild(targetCondition);
  parent.removeChild(targetResult);
  var resultElm = $('resultSearch');
  var results = parent.getElementsByTagName('li');
  if (results.length == 0) {
    resultElm.parentNode.removeChild(resultElm);
  }
}
function getTbodyNode(gid) {
  var addressesNode = $('addresses' + gid);
  if (addressesNode == null) return null;
  var nodes = addressesNode.getElementsByTagName('tbody');
  if (nodes.length == 0) return null;
  return nodes[0];
}
function nextSortOrder(titleText) {
  var mark = "▲";
  if (titleText.match(/▲/)) mark = "▼";
  return mark;
}
function initSortMark(node) {
  node.innerHTML = node.innerHTML.replace("▲","").replace("▼","");
}
function setNextSortOrder(gid, key) {
  var keyNode = $(key + 'Caption' + gid);
  var nameNode = $('nameCaption' + gid);
  var kanaNode = $('kanaCaption' + gid);
  var sortNoNode = $('sortNoCaption' + gid);
  var officialPositionNode = $('officialPositionCaption' + gid);
  var emailNode = $('emailCaption' + gid);
  var order = "▲";
  if (!nameNode || !kanaNode || !sortNoNode || !officialPositionNode || !emailNode || !keyNode) return order;
  order = nextSortOrder(keyNode.innerHTML);
  initSortMark(nameNode);
  initSortMark(kanaNode);
  initSortMark(sortNoNode);
  initSortMark(officialPositionNode);
  initSortMark(emailNode);
  keyNode.innerHTML += order;
  if (keyNode == sortNoNode) {
    officialPositionNode.innerHTML += order;
  } 
  return order;
}
function getInnerText(elm) {
  if ('textContent' in  elm) {
    return elm.textContent;
  }
  return elm.innerText;
}
function sortAddresses(gid, key) {
  var tbodyNode = getTbodyNode(gid);
  if (tbodyNode == null) return false;
  var trNodes = tbodyNode.getElementsByTagName('tr');
  if (trNodes.length == 0) return false;
  var order = setNextSortOrder(gid, key);
  var clones = new Array();
  while (trNodes.length > 1) {
    var node = trNodes[1];
    var children = node.getElementsByTagName('td');
    if (children.length >= 7) {
      var hash = new Hash();
      hash.node = node;
      hash.name = getInnerText(children[3]);
      hash.kana = getInnerText(children[4]);
      hash.sortNo = getInnerText(children[5]);
      hash.officialPosition = getInnerText(children[6]);
      hash.email = getInnerText(children[7]);
      clones.push(hash);
    }
    node.parentNode.removeChild(node);
  }
  if (order == "▲") {
    clones.sort(function(e1,e2){ return e1[key] > e2[key] ? 1 : -1; });
  } else {
    clones.sort(function(e1,e2){ return e1[key] < e2[key] ? 1 : -1; });
  }
  for (var i=0; i<clones.length; i++) {
    tbodyNode.appendChild(clones[i].node);
  }
}
//]]>
</script>
<table id="webmailContainer"><tr><td id="webmailMenu" style="width: 25%;">
<div id="webmailMenuContainer">

<div class="mailbox addressTree">
  <ul class="root" id="folderRoot">
    <% @groups.each do |g| %>
      <li class="folder">
        <% if g.enabled_children.count > 0 %>
          <%= link_to '+', '#', :id => "toggleGroups#{g.id}", :class => "toggleGroups toggleGroupsClose", :onclick => "toggleGroups('#{g.id}');return false" %>
        <% else %>
          <%= link_to '+', '#', :class => "toggleGroups", :style => "visibility:hidden;" %>
        <% end %>
        <%= link_to g.name, "#top", :id => "group#{g.id}", :onclick => "return loadAddresses('#{g.id}');" %>
      </li>
    <% end %>
  </ul>
</div>

</div>
</td><td id="webmailContent"><div id="addressContent">
<div id="sysAddresses">
<%= form_tag gw_webmail_sys_addresses_path, :method => :get, :id => 'searchForm', :class => 'search',
  :onsubmit => "searchAddresses();return false;" do %>
<table>
  <tr>
    <th>名前</th>
    <td><%= text_field_tag 's_name_or_kana', '', :class => "name", :style => "width: 120px" %></td>
    <th>メールアドレス</th>
    <td><%= text_field_tag 's_email', '', :class => "email", :style => "width: 200px" %></td>
    <td class="formSubmitters">
      <%= submit_tag '検索', :name => :search
      %><%= submit_tag 'リセット', :name => :reset, :onclick => "$('searchForm').onsubmit = null;return true;" %>
    </td>
  </tr>
</table>
<% end %>

<%= form_for :item, :url => url_for(:action => :index), :html => {:id => 'users', :name => 'users', :target => '_blank'} do |f| %>

<div id="addresses">
  <div id="addressesSearch" style="display:none;">
    <p class="form">検索結果一覧</p>
    <table class="index">
      <thead><tr>
        <th style="width:150px;">検索結果</th>
        <th>検索条件</th>
      </tr></thead>
      <tbody id="searchResultList"></tbody>
    </table>
  </div>
</div>
<!-- end #sysAddresses --></div>
<div id="sysAddress" style="display:none;">
</div>
<% end %>

<!-- end #addressContent --></div><!-- end #webmailContainer --></td></table>
