<%
subject_wrap = @mail_list_subject.blank? ? '' : 'autoWrap'
from_class = @mail_list_from_address.blank? ? 'from' : 'fromOmitAddress'

def sort_mark(key)
  mark = ''
  if params[:sort_key] == key.to_s
    mark = params[:sort_order] == '' ? '▲' :  '▼'
  end
  mark
end

def sort_link(key)
  order = ''
  if params[:sort_key] == key.to_s
    order = params[:sort_order] == '' ? 'reverse': ''
  end
  url_for(@s_params.merge(:sort_key => key.to_s, :sort_order => order))
end
%>
<script type="text/javascript">
//<![CDATA[
function starMail(uid) {
  var starElm = $('mail_star_' + uid);
  var beforeState = starElm.className;
  if (beforeState == 'loading') {
    return false;
  }
  starElm.className = 'loading';
  var ajax = new Ajax.Request('<%=raw star_gw_webmail_mails_path(@mailbox.name) %>', {
    method: 'get',
    parameters: {
      id: uid
    },
    onSuccess: function(request) {
      if (beforeState == 'starOn') {
        starElm.className = 'starOff';
      } else {
        starElm.className = 'starOn';
      }
    },
    onFailure: function(request) {
      alert('通信に失敗しました。');
      starElm.className = beforeState;
    }
  });
}
//]]>
</script>

<table class="mails">
  <% for item in items
    flag  = (item.answered?) ? "answered" : ""
    flag += "forwarded" if item.forwarded?
    mdnRequest = item.has_disposition_notification_to? ? 'mdnRequest' : ''
    uri = url_for(@s_params.merge(:action => :show, :id => item.uid, :new_window => (@mail_open_window.blank? ? nil : 1)))
    click = ""#%Q[onclick="openMail('#{uri}', #{!@mail_open_window.blank?}); return false;"].html_safe
    from_tooltip = value = truncate(item.subject, :length => 70)
    s_from = from = item.friendly_from_addr
    if @mailbox.name =~ /^(Sent|Drafts)(\.|$)/
      from = item.simple_to_addr
      s_from = item.friendly_to_addrs[0] || ''
    end 
    from, from_tooltip = omit_from_address_in_mail_list(from)
    value = ' ' if value.blank?

    if item.date && match = item.date.match(/(\d{4}-\d{2}-\d{2})\s\d{2}:\d{2}/)
      date = match[1]
    end
    
    star_class = item.starred? ? "starOn" : "starOff"
    star_title = item.starred? ? "スター" : ""
    %>
    <tr class="<%= 'unseen' if item.unseen? %> <%= cycle '', 'cycle' %>">
      <td class="check"><input type="checkbox" name="item[ids][<%= item.uid %>]" value="1" class="checkUI" /></td>
      <td class="<%= star_class %>" id="mail_star_<%= item.uid %>" title="<%= star_title %>" onclick="starMail('<%= item.uid %>');">&nbsp;</td>
      <td class="attach subject from date <%= flag %> <%= mdnRequest %> <%= subject_wrap %>" <%=raw click %>>
        <a href="<%= uri %>">
          <span class="date"><%= "#{item.date}" %></span>
          <span class="from"><%= mail_text_wrap(from) %></span><br />
          <span class="subject overflowHidden <%= subject_wrap %>" title="<%= item.subject %>">
            <span id="mail_<%= item.uid %>_labels" class="labels">
              <% 
                item.labels.each do |label|
                  if label_conf = @label_confs.find{|conf| conf[:id] == label}
                    concat raw %Q(<span class="label" style="background-color:#{label_conf[:color]};">#{label_conf[:name]}</span>)
                  end
                end
              %></span><span class="text"><%= mail_text_wrap(value) %></span>
          </span>
          <% if @mailbox.name =~ /^(Star)$/ %>
          <span class="mailbox"> 
            <%= safe{@mailboxes.find{|x| x.name == item.node.ref_mailbox}.title} if item.node %>
          </span>
          <% end %>
        </a>
      </td>
    </tr>
  <% end %>
</table>